import mongoose from "mongoose";
import axios from "axios";
import dotenv from "dotenv";
import Product from "../models/product.model.js";

dotenv.config();

console.log("MONGO_URI:", process.env.MONGO_URI); // ‚úÖ Ki·ªÉm tra gi√° tr·ªã
async function updateDetectedLabels() {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng");

    const products = await Product.find({
      detectedLabel: { $in: [null, ""] },
    });

    console.log(`üõí T·ªïng s·∫£n ph·∫©m c·∫ßn g√°n label: ${products.length}`);

    for (const product of products) {
      try {
        const imageUrl = product.image;

        // T·∫£i ·∫£nh t·ª´ URL
        const imageResponse = await axios.get(imageUrl, {
          responseType: "arraybuffer",
        });
        const imageBuffer = imageResponse.data;

        // G·ª≠i ·∫£nh l√™n Hugging Face ƒë·ªÉ ph√¢n lo·∫°i
        const response = await axios.post(
          "https://api-inference.huggingface.co/models/google/vit-base-patch16-224",
          imageBuffer,
          {
            headers: {
              Authorization: `Bearer ${process.env.HUGGINGFACE_TOKEN}`,
              "Content-Type": "application/octet-stream",
            },
          }
        );

        const label = response.data?.[0]?.label || "";
        product.detectedLabel = label;
        await product.save();
        console.log(`‚úÖ G√°n label '${label}' cho: ${product.name}`);
      } catch (error) {
        console.error(`‚ùå L·ªói x·ª≠ l√Ω s·∫£n ph·∫©m ${product._id}:`, error.message);
      }
    }

    console.log("üéâ ƒê√£ c·∫≠p nh·∫≠t xong t·∫•t c·∫£ s·∫£n ph·∫©m!");
    process.exit(0);
  } catch (error) {
    console.error("‚ùå L·ªói k·∫øt n·ªëi ho·∫∑c truy v·∫•n MongoDB:", error.message);
    process.exit(1);
  }
}

updateDetectedLabels();
